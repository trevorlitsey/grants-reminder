// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditGrantForm should render without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditGrantForm
    grant={
      Object {
        "date": 1521592644420,
        "id": "basicGrant",
        "name": "a grant name",
        "notes": "",
        "purpose": "general operations",
        "reminders": Object {
          "oneMonth": false,
          "oneWeek": false,
          "twoMonths": true,
          "twoWeeks": true,
        },
      }
    }
    purposes={
      Object {
        "one": "General Operations",
        "three": "Special Projects",
        "two": "Education",
      }
    }
    updateGrant={[Function]}
    updateGrantToEdit={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <td
        className="jsx-3478504263"
        colSpan="5"
      >
        <form
          className="jsx-3478504263"
          onSubmit={[Function]}
        >
          <div
            className="jsx-3478504263 top-row"
          >
            <h5
              className="jsx-3478504263"
            >
              Edit: 
            </h5>
            <p
              className="jsx-3478504263 close"
              onClick={[Function]}
            >
              x close
            </p>
          </div>
          <div
            className="jsx-3478504263 row"
          >
            <MonthOptions
              handleChange={[Function]}
              selected={2}
            />
            <DayOptions
              date={"2018-03-21T00:37:24.420Z"}
              handleChange={[Function]}
              selected={20}
            />
            <YearOptions
              handleChange={[Function]}
              selected={2018}
            />
            <input
              className="jsx-3478504263 u-full-width four columns"
              data-test="name"
              name="name"
              onChange={[Function]}
              placeholder="Name of grant"
              type="text"
              value="a grant name"
            />
            <PurposeOptions
              handleChange={[Function]}
              purposes={
                Object {
                  "one": "General Operations",
                  "three": "Special Projects",
                  "two": "Education",
                }
              }
              selected="general operations"
            />
          </div>
          <textarea
            className="jsx-3478504263 u-full-width"
            data-test="notes"
            name="notes"
            onChange={[Function]}
            placeholder="Notes ..."
            value=""
          />
          <ReminderOptions
            handleChange={[Function]}
            oneMonth={false}
            oneWeek={false}
            twoMonths={true}
            twoWeeks={true}
          />
          <div
            className="jsx-3478504263 buttons"
          >
            <button
              className="jsx-3478504263 button"
              type="submit"
            >
              Update
            </button>
            <button
              className="jsx-3478504263 button button--delete"
              onClick={[Function]}
            >
              Delete
            </button>
          </div>
          <FormAlert
            message=""
          />
        </form>
        <JSXStyle
          css="form.jsx-3478504263{background:HSLA(208,100%,50%,.1);border-radius:6px;padding:10px;}.row.jsx-3478504263{margin:10px 0;}.top-row.jsx-3478504263{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}.close.jsx-3478504263:hover{cursor:pointer;}textarea.jsx-3478504263{resize:vertical;}.buttons.jsx-3478504263{margin-top:8px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}button.button--delete.jsx-3478504263{background:HSLA(0,100%,69%,0.1);}"
          styleId="3478504263"
        />
      </td>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            className="jsx-3478504263"
            onSubmit={[Function]}
          >
            <div
              className="jsx-3478504263 top-row"
            >
              <h5
                className="jsx-3478504263"
              >
                Edit: 
              </h5>
              <p
                className="jsx-3478504263 close"
                onClick={[Function]}
              >
                x close
              </p>
            </div>
            <div
              className="jsx-3478504263 row"
            >
              <MonthOptions
                handleChange={[Function]}
                selected={2}
              />
              <DayOptions
                date={"2018-03-21T00:37:24.420Z"}
                handleChange={[Function]}
                selected={20}
              />
              <YearOptions
                handleChange={[Function]}
                selected={2018}
              />
              <input
                className="jsx-3478504263 u-full-width four columns"
                data-test="name"
                name="name"
                onChange={[Function]}
                placeholder="Name of grant"
                type="text"
                value="a grant name"
              />
              <PurposeOptions
                handleChange={[Function]}
                purposes={
                  Object {
                    "one": "General Operations",
                    "three": "Special Projects",
                    "two": "Education",
                  }
                }
                selected="general operations"
              />
            </div>
            <textarea
              className="jsx-3478504263 u-full-width"
              data-test="notes"
              name="notes"
              onChange={[Function]}
              placeholder="Notes ..."
              value=""
            />
            <ReminderOptions
              handleChange={[Function]}
              oneMonth={false}
              oneWeek={false}
              twoMonths={true}
              twoWeeks={true}
            />
            <div
              className="jsx-3478504263 buttons"
            >
              <button
                className="jsx-3478504263 button"
                type="submit"
              >
                Update
              </button>
              <button
                className="jsx-3478504263 button button--delete"
                onClick={[Function]}
              >
                Delete
              </button>
            </div>
            <FormAlert
              message=""
            />
          </form>,
          <JSXStyle
            css="form.jsx-3478504263{background:HSLA(208,100%,50%,.1);border-radius:6px;padding:10px;}.row.jsx-3478504263{margin:10px 0;}.top-row.jsx-3478504263{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}.close.jsx-3478504263:hover{cursor:pointer;}textarea.jsx-3478504263{resize:vertical;}.buttons.jsx-3478504263{margin-top:8px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}button.button--delete.jsx-3478504263{background:HSLA(0,100%,69%,0.1);}"
            styleId="3478504263"
          />,
        ],
        "className": "jsx-3478504263",
        "colSpan": "5",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="jsx-3478504263 top-row"
              >
                <h5
                  className="jsx-3478504263"
                >
                  Edit: 
                </h5>
                <p
                  className="jsx-3478504263 close"
                  onClick={[Function]}
                >
                  x close
                </p>
              </div>,
              <div
                className="jsx-3478504263 row"
              >
                <MonthOptions
                  handleChange={[Function]}
                  selected={2}
                />
                <DayOptions
                  date={"2018-03-21T00:37:24.420Z"}
                  handleChange={[Function]}
                  selected={20}
                />
                <YearOptions
                  handleChange={[Function]}
                  selected={2018}
                />
                <input
                  className="jsx-3478504263 u-full-width four columns"
                  data-test="name"
                  name="name"
                  onChange={[Function]}
                  placeholder="Name of grant"
                  type="text"
                  value="a grant name"
                />
                <PurposeOptions
                  handleChange={[Function]}
                  purposes={
                    Object {
                      "one": "General Operations",
                      "three": "Special Projects",
                      "two": "Education",
                    }
                  }
                  selected="general operations"
                />
              </div>,
              <textarea
                className="jsx-3478504263 u-full-width"
                data-test="notes"
                name="notes"
                onChange={[Function]}
                placeholder="Notes ..."
                value=""
              />,
              <ReminderOptions
                handleChange={[Function]}
                oneMonth={false}
                oneWeek={false}
                twoMonths={true}
                twoWeeks={true}
              />,
              <div
                className="jsx-3478504263 buttons"
              >
                <button
                  className="jsx-3478504263 button"
                  type="submit"
                >
                  Update
                </button>
                <button
                  className="jsx-3478504263 button button--delete"
                  onClick={[Function]}
                >
                  Delete
                </button>
              </div>,
              <FormAlert
                message=""
              />,
            ],
            "className": "jsx-3478504263",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h5
                    className="jsx-3478504263"
                  >
                    Edit: 
                  </h5>,
                  <p
                    className="jsx-3478504263 close"
                    onClick={[Function]}
                  >
                    x close
                  </p>,
                ],
                "className": "jsx-3478504263 top-row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Edit: ",
                    "className": "jsx-3478504263",
                  },
                  "ref": null,
                  "rendered": "Edit: ",
                  "type": "h5",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "x close",
                    "className": "jsx-3478504263 close",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "x close",
                  "type": "p",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <MonthOptions
                    handleChange={[Function]}
                    selected={2}
                  />,
                  <DayOptions
                    date={"2018-03-21T00:37:24.420Z"}
                    handleChange={[Function]}
                    selected={20}
                  />,
                  <YearOptions
                    handleChange={[Function]}
                    selected={2018}
                  />,
                  <input
                    className="jsx-3478504263 u-full-width four columns"
                    data-test="name"
                    name="name"
                    onChange={[Function]}
                    placeholder="Name of grant"
                    type="text"
                    value="a grant name"
                  />,
                  <PurposeOptions
                    handleChange={[Function]}
                    purposes={
                      Object {
                        "one": "General Operations",
                        "three": "Special Projects",
                        "two": "Education",
                      }
                    }
                    selected="general operations"
                  />,
                ],
                "className": "jsx-3478504263 row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "handleChange": [Function],
                    "selected": 2,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "date": "2018-03-21T00:37:24.420Z",
                    "handleChange": [Function],
                    "selected": 20,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "handleChange": [Function],
                    "selected": 2018,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "jsx-3478504263 u-full-width four columns",
                    "data-test": "name",
                    "name": "name",
                    "onChange": [Function],
                    "placeholder": "Name of grant",
                    "type": "text",
                    "value": "a grant name",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "handleChange": [Function],
                    "purposes": Object {
                      "one": "General Operations",
                      "three": "Special Projects",
                      "two": "Education",
                    },
                    "selected": "general operations",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "jsx-3478504263 u-full-width",
                "data-test": "notes",
                "name": "notes",
                "onChange": [Function],
                "placeholder": "Notes ...",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "handleChange": [Function],
                "oneMonth": false,
                "oneWeek": false,
                "twoMonths": true,
                "twoWeeks": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    className="jsx-3478504263 button"
                    type="submit"
                  >
                    Update
                  </button>,
                  <button
                    className="jsx-3478504263 button button--delete"
                    onClick={[Function]}
                  >
                    Delete
                  </button>,
                ],
                "className": "jsx-3478504263 buttons",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Update",
                    "className": "jsx-3478504263 button",
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Update",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Delete",
                    "className": "jsx-3478504263 button button--delete",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Delete",
                  "type": "button",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "message": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "css": "form.jsx-3478504263{background:HSLA(208,100%,50%,.1);border-radius:6px;padding:10px;}.row.jsx-3478504263{margin:10px 0;}.top-row.jsx-3478504263{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}.close.jsx-3478504263:hover{cursor:pointer;}textarea.jsx-3478504263{resize:vertical;}.buttons.jsx-3478504263{margin-top:8px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}button.button--delete.jsx-3478504263{background:HSLA(0,100%,69%,0.1);}",
            "styleId": "3478504263",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "td",
    },
    "type": "tr",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <td
          className="jsx-3478504263"
          colSpan="5"
        >
          <form
            className="jsx-3478504263"
            onSubmit={[Function]}
          >
            <div
              className="jsx-3478504263 top-row"
            >
              <h5
                className="jsx-3478504263"
              >
                Edit: 
              </h5>
              <p
                className="jsx-3478504263 close"
                onClick={[Function]}
              >
                x close
              </p>
            </div>
            <div
              className="jsx-3478504263 row"
            >
              <MonthOptions
                handleChange={[Function]}
                selected={2}
              />
              <DayOptions
                date={"2018-03-21T00:37:24.420Z"}
                handleChange={[Function]}
                selected={20}
              />
              <YearOptions
                handleChange={[Function]}
                selected={2018}
              />
              <input
                className="jsx-3478504263 u-full-width four columns"
                data-test="name"
                name="name"
                onChange={[Function]}
                placeholder="Name of grant"
                type="text"
                value="a grant name"
              />
              <PurposeOptions
                handleChange={[Function]}
                purposes={
                  Object {
                    "one": "General Operations",
                    "three": "Special Projects",
                    "two": "Education",
                  }
                }
                selected="general operations"
              />
            </div>
            <textarea
              className="jsx-3478504263 u-full-width"
              data-test="notes"
              name="notes"
              onChange={[Function]}
              placeholder="Notes ..."
              value=""
            />
            <ReminderOptions
              handleChange={[Function]}
              oneMonth={false}
              oneWeek={false}
              twoMonths={true}
              twoWeeks={true}
            />
            <div
              className="jsx-3478504263 buttons"
            >
              <button
                className="jsx-3478504263 button"
                type="submit"
              >
                Update
              </button>
              <button
                className="jsx-3478504263 button button--delete"
                onClick={[Function]}
              >
                Delete
              </button>
            </div>
            <FormAlert
              message=""
            />
          </form>
          <JSXStyle
            css="form.jsx-3478504263{background:HSLA(208,100%,50%,.1);border-radius:6px;padding:10px;}.row.jsx-3478504263{margin:10px 0;}.top-row.jsx-3478504263{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}.close.jsx-3478504263:hover{cursor:pointer;}textarea.jsx-3478504263{resize:vertical;}.buttons.jsx-3478504263{margin-top:8px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}button.button--delete.jsx-3478504263{background:HSLA(0,100%,69%,0.1);}"
            styleId="3478504263"
          />
        </td>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <form
              className="jsx-3478504263"
              onSubmit={[Function]}
            >
              <div
                className="jsx-3478504263 top-row"
              >
                <h5
                  className="jsx-3478504263"
                >
                  Edit: 
                </h5>
                <p
                  className="jsx-3478504263 close"
                  onClick={[Function]}
                >
                  x close
                </p>
              </div>
              <div
                className="jsx-3478504263 row"
              >
                <MonthOptions
                  handleChange={[Function]}
                  selected={2}
                />
                <DayOptions
                  date={"2018-03-21T00:37:24.420Z"}
                  handleChange={[Function]}
                  selected={20}
                />
                <YearOptions
                  handleChange={[Function]}
                  selected={2018}
                />
                <input
                  className="jsx-3478504263 u-full-width four columns"
                  data-test="name"
                  name="name"
                  onChange={[Function]}
                  placeholder="Name of grant"
                  type="text"
                  value="a grant name"
                />
                <PurposeOptions
                  handleChange={[Function]}
                  purposes={
                    Object {
                      "one": "General Operations",
                      "three": "Special Projects",
                      "two": "Education",
                    }
                  }
                  selected="general operations"
                />
              </div>
              <textarea
                className="jsx-3478504263 u-full-width"
                data-test="notes"
                name="notes"
                onChange={[Function]}
                placeholder="Notes ..."
                value=""
              />
              <ReminderOptions
                handleChange={[Function]}
                oneMonth={false}
                oneWeek={false}
                twoMonths={true}
                twoWeeks={true}
              />
              <div
                className="jsx-3478504263 buttons"
              >
                <button
                  className="jsx-3478504263 button"
                  type="submit"
                >
                  Update
                </button>
                <button
                  className="jsx-3478504263 button button--delete"
                  onClick={[Function]}
                >
                  Delete
                </button>
              </div>
              <FormAlert
                message=""
              />
            </form>,
            <JSXStyle
              css="form.jsx-3478504263{background:HSLA(208,100%,50%,.1);border-radius:6px;padding:10px;}.row.jsx-3478504263{margin:10px 0;}.top-row.jsx-3478504263{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}.close.jsx-3478504263:hover{cursor:pointer;}textarea.jsx-3478504263{resize:vertical;}.buttons.jsx-3478504263{margin-top:8px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}button.button--delete.jsx-3478504263{background:HSLA(0,100%,69%,0.1);}"
              styleId="3478504263"
            />,
          ],
          "className": "jsx-3478504263",
          "colSpan": "5",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="jsx-3478504263 top-row"
                >
                  <h5
                    className="jsx-3478504263"
                  >
                    Edit: 
                  </h5>
                  <p
                    className="jsx-3478504263 close"
                    onClick={[Function]}
                  >
                    x close
                  </p>
                </div>,
                <div
                  className="jsx-3478504263 row"
                >
                  <MonthOptions
                    handleChange={[Function]}
                    selected={2}
                  />
                  <DayOptions
                    date={"2018-03-21T00:37:24.420Z"}
                    handleChange={[Function]}
                    selected={20}
                  />
                  <YearOptions
                    handleChange={[Function]}
                    selected={2018}
                  />
                  <input
                    className="jsx-3478504263 u-full-width four columns"
                    data-test="name"
                    name="name"
                    onChange={[Function]}
                    placeholder="Name of grant"
                    type="text"
                    value="a grant name"
                  />
                  <PurposeOptions
                    handleChange={[Function]}
                    purposes={
                      Object {
                        "one": "General Operations",
                        "three": "Special Projects",
                        "two": "Education",
                      }
                    }
                    selected="general operations"
                  />
                </div>,
                <textarea
                  className="jsx-3478504263 u-full-width"
                  data-test="notes"
                  name="notes"
                  onChange={[Function]}
                  placeholder="Notes ..."
                  value=""
                />,
                <ReminderOptions
                  handleChange={[Function]}
                  oneMonth={false}
                  oneWeek={false}
                  twoMonths={true}
                  twoWeeks={true}
                />,
                <div
                  className="jsx-3478504263 buttons"
                >
                  <button
                    className="jsx-3478504263 button"
                    type="submit"
                  >
                    Update
                  </button>
                  <button
                    className="jsx-3478504263 button button--delete"
                    onClick={[Function]}
                  >
                    Delete
                  </button>
                </div>,
                <FormAlert
                  message=""
                />,
              ],
              "className": "jsx-3478504263",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h5
                      className="jsx-3478504263"
                    >
                      Edit: 
                    </h5>,
                    <p
                      className="jsx-3478504263 close"
                      onClick={[Function]}
                    >
                      x close
                    </p>,
                  ],
                  "className": "jsx-3478504263 top-row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Edit: ",
                      "className": "jsx-3478504263",
                    },
                    "ref": null,
                    "rendered": "Edit: ",
                    "type": "h5",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "x close",
                      "className": "jsx-3478504263 close",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "x close",
                    "type": "p",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <MonthOptions
                      handleChange={[Function]}
                      selected={2}
                    />,
                    <DayOptions
                      date={"2018-03-21T00:37:24.420Z"}
                      handleChange={[Function]}
                      selected={20}
                    />,
                    <YearOptions
                      handleChange={[Function]}
                      selected={2018}
                    />,
                    <input
                      className="jsx-3478504263 u-full-width four columns"
                      data-test="name"
                      name="name"
                      onChange={[Function]}
                      placeholder="Name of grant"
                      type="text"
                      value="a grant name"
                    />,
                    <PurposeOptions
                      handleChange={[Function]}
                      purposes={
                        Object {
                          "one": "General Operations",
                          "three": "Special Projects",
                          "two": "Education",
                        }
                      }
                      selected="general operations"
                    />,
                  ],
                  "className": "jsx-3478504263 row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "handleChange": [Function],
                      "selected": 2,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "date": "2018-03-21T00:37:24.420Z",
                      "handleChange": [Function],
                      "selected": 20,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "handleChange": [Function],
                      "selected": 2018,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "jsx-3478504263 u-full-width four columns",
                      "data-test": "name",
                      "name": "name",
                      "onChange": [Function],
                      "placeholder": "Name of grant",
                      "type": "text",
                      "value": "a grant name",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "handleChange": [Function],
                      "purposes": Object {
                        "one": "General Operations",
                        "three": "Special Projects",
                        "two": "Education",
                      },
                      "selected": "general operations",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "jsx-3478504263 u-full-width",
                  "data-test": "notes",
                  "name": "notes",
                  "onChange": [Function],
                  "placeholder": "Notes ...",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "textarea",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "handleChange": [Function],
                  "oneMonth": false,
                  "oneWeek": false,
                  "twoMonths": true,
                  "twoWeeks": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <button
                      className="jsx-3478504263 button"
                      type="submit"
                    >
                      Update
                    </button>,
                    <button
                      className="jsx-3478504263 button button--delete"
                      onClick={[Function]}
                    >
                      Delete
                    </button>,
                  ],
                  "className": "jsx-3478504263 buttons",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Update",
                      "className": "jsx-3478504263 button",
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Update",
                    "type": "button",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Delete",
                      "className": "jsx-3478504263 button button--delete",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "Delete",
                    "type": "button",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "message": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "css": "form.jsx-3478504263{background:HSLA(208,100%,50%,.1);border-radius:6px;padding:10px;}.row.jsx-3478504263{margin:10px 0;}.top-row.jsx-3478504263{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}.close.jsx-3478504263:hover{cursor:pointer;}textarea.jsx-3478504263{resize:vertical;}.buttons.jsx-3478504263{margin-top:8px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}button.button--delete.jsx-3478504263{background:HSLA(0,100%,69%,0.1);}",
              "styleId": "3478504263",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "td",
      },
      "type": "tr",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
